[{"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\index.tsx":"1","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\App.tsx":"2","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Home\\index.tsx":"3","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Register\\index.tsx":"4","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Complete\\index.tsx":"5","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Edit\\index.tsx":"6","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Header\\index.tsx":"7","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\services\\api.ts":"8","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Button\\index.tsx":"9","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\PageControl\\index.tsx":"10","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Form\\index.tsx":"11"},{"size":269,"mtime":1664381749431,"results":"12","hashOfConfig":"13"},{"size":671,"mtime":1664819430647,"results":"14","hashOfConfig":"13"},{"size":3263,"mtime":1664904513471,"results":"15","hashOfConfig":"13"},{"size":1738,"mtime":1664824476544,"results":"16","hashOfConfig":"13"},{"size":174,"mtime":1664470050739,"results":"17","hashOfConfig":"13"},{"size":3021,"mtime":1664906055143,"results":"18","hashOfConfig":"13"},{"size":644,"mtime":1664818864724,"results":"19","hashOfConfig":"13"},{"size":102,"mtime":1664473258743,"results":"20","hashOfConfig":"13"},{"size":288,"mtime":1664816518126,"results":"21","hashOfConfig":"13"},{"size":351,"mtime":1664820513258,"results":"22","hashOfConfig":"13"},{"size":1812,"mtime":1664903792590,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1sgvv3u",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\index.tsx",[],[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\App.tsx",[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Home\\index.tsx",["61"],[],"import Swal from 'sweetalert2'\r\nimport { useEffect, useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport \"./styles.css\"\r\nimport {Button} from \"../../components/Button\"\r\nimport { api } from '../../services/api'\r\nimport {FaEdit} from 'react-icons/fa'\r\nimport {Link} from 'react-router-dom'\r\nimport {PageControl} from \"../../components/PageControl\"\r\n\r\ntype Order = {\r\n    id: number;\r\n    description: string;\r\n    price: string;\r\n    optional: string;\r\n    status: number;\r\n}\r\n\r\nexport function Home(){\r\n    const navigate = useNavigate()\r\n\r\n    const [orders, setOrders] = useState<Order[]>([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    function navigateToRegister(){\r\n        navigate('cadastrar-pedidos')\r\n    }\r\n\r\n    useEffect(()=>{\r\n        async function fetchOrders(){\r\n            try{\r\n                const response = await api.get('/orders')\r\n                setOrders(response.data)\r\n                setIsLoading(false)\r\n            }catch(error){\r\n                console.log(error)\r\n                Swal.fire({\r\n                    icon:\"error\",\r\n                    title:\"Algo deu errado\",\r\n                    text:\"Impossível renderizar produtos!\"\r\n                })\r\n            }\r\n        }\r\n        fetchOrders()\r\n    },[])\r\n\r\n    return(\r\n        <main>\r\n            <PageControl title=\"Pedidos pendentes\">\r\n                <Button onClick={navigateToRegister}>Cadastrar pedido</Button>\r\n            </PageControl>\r\n            \r\n            <section className=\"table-container\">\r\n                <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Descrição</th>\r\n                                <th>Preço</th>\r\n                                <th>Observações</th>\r\n                                <th>Ações</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {isLoading ? (\r\n                                    <tr><td></td><td></td><td><img src=\"https://upload.wikimedia.org/wikipedia/commons/c/c7/Loading_2.gif\"/></td><td></td></tr>\r\n                                ) : (\r\n                                    orders.map((order)=>{\r\n                                        return(\r\n                                            <tr key={order.id}>\r\n                                                <td>{order.description}</td>\r\n                                                <td>{order.price}</td>\r\n                                                <td>{order.optional}</td>\r\n                                                <td>\r\n                                                    <Link to={`/editar-pedido/${order.id}`} className='edit-button'>\r\n                                                        <FaEdit/>\r\n                                                    </Link>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n            </section>\r\n        </main>\r\n    )\r\n}","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Register\\index.tsx",["62","63"],[],"import {FormEvent, useState} from \"react\"\r\nimport {api} from \"../../services/api\"\r\nimport Swal from \"sweetalert2\"\r\nimport \"./styles.css\"\r\nimport { Button } from \"../../components/Button\"\r\nimport {PageControl} from \"../../components/PageControl\"\r\nimport { Form } from \"../../components/Form\"\r\n\r\nexport function Register(){\r\n\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [optional, setOptional] = useState(\"\")\r\n    \r\n    async function registerOrder(event:FormEvent){\r\n        event.preventDefault()\r\n        try{\r\n            const response = await api.post('/orders',{\r\n                description,price,optional,status:0\r\n            })\r\n            setDescription(\"\")\r\n            setPrice(\"\")\r\n            setOptional(\"\")\r\n            \r\n            Swal.fire({\r\n                icon:\"success\",\r\n                title:\"Enviado com sucesso\",\r\n                text:\"Pedido cadastrado com sucesso\"\r\n            })\r\n        }catch(error){\r\n            console.log(error)\r\n            Swal.fire({\r\n                icon:\"error\",\r\n                title:\"Algo deu errado\",\r\n                text:\"Impossível cadastrar produto!\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <main>\r\n            <PageControl title=\"Pedidos Cadastrados\"/>\r\n            <section>\r\n                <Form \r\n                    onSubmit={registerOrder}\r\n                    description={description}\r\n                    setDescription={setDescription}\r\n                    price={price}\r\n                    setPrice={setPrice}\r\n                    optional={optional}\r\n                    setOptional={setOptional}\r\n                />\r\n            </section>\r\n        </main>\r\n    )\r\n}","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Complete\\index.tsx",[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Edit\\index.tsx",["64","65","66"],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Header\\index.tsx",[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\services\\api.ts",[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Button\\index.tsx",[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\PageControl\\index.tsx",["67"],[],"import { Button } from \"../Button\"\r\nimport {ReactNode} from \"react\"\r\n\r\ntype Props = {\r\n    title: String,\r\n    children?: ReactNode\r\n}\r\n\r\nexport function PageControl({title, children}: Props){\r\n    return(\r\n        <section className=\"page-control\">\r\n            <h2 className=\"title\">{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Form\\index.tsx",[],[],{"ruleId":"68","severity":1,"message":"69","line":65,"column":63,"nodeType":"70","endLine":65,"endColumn":141},{"ruleId":"71","severity":1,"message":"72","line":5,"column":10,"nodeType":"73","messageId":"74","endLine":5,"endColumn":16},{"ruleId":"71","severity":1,"message":"75","line":18,"column":19,"nodeType":"73","messageId":"74","endLine":18,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":36,"column":7,"nodeType":"78","endLine":36,"endColumn":9,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"75","line":41,"column":19,"nodeType":"73","messageId":"74","endLine":41,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":71,"column":35,"nodeType":"70","endLine":71,"endColumn":113},{"ruleId":"71","severity":1,"message":"72","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":16},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["80"],{"desc":"81","fix":"82"},"Update the dependencies array to be: [id]",{"range":"83","text":"84"},[1236,1238],"[id]"]