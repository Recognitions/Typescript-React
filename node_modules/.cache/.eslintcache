[{"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\index.tsx":"1","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\App.tsx":"2","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Home\\index.tsx":"3","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Register\\index.tsx":"4","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Complete\\index.tsx":"5","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Edit\\index.tsx":"6","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Header\\index.tsx":"7","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\services\\api.ts":"8","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Button\\index.tsx":"9","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\PageControl\\index.tsx":"10","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Form\\index.tsx":"11"},{"size":269,"mtime":1664381749431,"results":"12","hashOfConfig":"13"},{"size":671,"mtime":1664819430647,"results":"14","hashOfConfig":"13"},{"size":5475,"mtime":1664911808179,"results":"15","hashOfConfig":"13"},{"size":1691,"mtime":1664907965504,"results":"16","hashOfConfig":"13"},{"size":2498,"mtime":1664911759751,"results":"17","hashOfConfig":"13"},{"size":3030,"mtime":1664910286176,"results":"18","hashOfConfig":"13"},{"size":644,"mtime":1664818864724,"results":"19","hashOfConfig":"13"},{"size":102,"mtime":1664473258743,"results":"20","hashOfConfig":"13"},{"size":288,"mtime":1664816518126,"results":"21","hashOfConfig":"13"},{"size":351,"mtime":1664820513258,"results":"22","hashOfConfig":"13"},{"size":1782,"mtime":1664908676568,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1sgvv3u",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"27"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\index.tsx",[],[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\App.tsx",[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Home\\index.tsx",["60","61","62"],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Register\\index.tsx",["63"],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Complete\\index.tsx",["64","65"],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\pages\\Edit\\index.tsx",["66","67","68"],[],"import { PageControl } from \"../../components/PageControl\"\r\nimport {useState, useEffect, FormEvent} from \"react\"\r\nimport { useParams,useNavigate } from \"react-router-dom\"\r\nimport { Form } from \"../../components/Form\"\r\nimport Swal from \"sweetalert2\"\r\nimport { api } from \"../../services/api\"\r\n\r\nexport function Edit(){\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n    const id = params.id\r\n    const [description, setDescription] = useState(\"\")\r\n    const [price, setPrice] = useState(\"\")\r\n    const [optional, setOptional] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        async function fetchOrder(){\r\n            try{\r\n                const {data} = await api.get(`/orders/${id}`)\r\n                setDescription(data.description)\r\n                setPrice(data.price)\r\n                setOptional(data.optional)\r\n\r\n                setIsLoading(false)\r\n            }catch(error){\r\n                console.log(error)\r\n                Swal.fire({\r\n                    icon:\"error\",\r\n                    title:\"Algo deu errado\",\r\n                    text:\"Impossível cadastrar produto!\"\r\n                })\r\n            }\r\n        }\r\n        fetchOrder()\r\n    },[])\r\n\r\n    async function editOrder(event: FormEvent){\r\n        event.preventDefault()\r\n        try{\r\n            const response = await api.put(`/orders/${id}`,{\r\n                description,price,optional,status:0\r\n            })\r\n            Swal.fire({\r\n                icon:\"success\",\r\n                title:\"Alterado com sucesso\",\r\n                text:\"Dados do paciente alterados com sucesso!\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n                timer: 1500\r\n            })\r\n\r\n            setTimeout(()=>{\r\n                navigate(\"/\")\r\n            },1600)\r\n        }catch(error){\r\n            console.error(error)\r\n            Swal.fire({\r\n                icon:\"error\",\r\n                title:\"Algo deu errado\",\r\n                text:\"Impossível atualizar os dados do produto!\"\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <main>\r\n            <PageControl title=\"Editar produto\"/>\r\n            <section>\r\n                {isLoading ? (\r\n                        <div>\r\n                            <span><img src=\"https://upload.wikimedia.org/wikipedia/commons/c/c7/Loading_2.gif\"/></span>\r\n                        </div>\r\n                    ):(\r\n                        <Form \r\n                            onSubmit={editOrder}\r\n                            description={description}\r\n                            setDescription={setDescription}\r\n                            price={price}\r\n                            setPrice={setPrice}\r\n                            optional={optional}\r\n                            setOptional={setOptional}\r\n                            title=\"Confirmar alterações\"\r\n                        />\r\n                    )\r\n                }\r\n            </section>\r\n        </main>\r\n    )\r\n}","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Header\\index.tsx",[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\services\\api.ts",[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Button\\index.tsx",[],[],"C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\PageControl\\index.tsx",["69"],[],"import { Button } from \"../Button\"\r\nimport {ReactNode} from \"react\"\r\n\r\ntype Props = {\r\n    title: String,\r\n    children?: ReactNode\r\n}\r\n\r\nexport function PageControl({title, children}: Props){\r\n    return(\r\n        <section className=\"page-control\">\r\n            <h2 className=\"title\">{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}","C:\\Users\\noteb\\OneDrive\\Documentos\\GitHub\\typescriptReact\\src\\components\\Form\\index.tsx",[],[],{"ruleId":"70","severity":1,"message":"71","line":51,"column":27,"nodeType":"72","messageId":"73","endLine":51,"endColumn":35},{"ruleId":"74","severity":1,"message":"75","line":108,"column":45,"nodeType":"76","endLine":108,"endColumn":123},{"ruleId":"77","severity":1,"message":"78","line":110,"column":72,"nodeType":"79","messageId":"80","endLine":110,"endColumn":74},{"ruleId":"70","severity":1,"message":"71","line":17,"column":19,"nodeType":"72","messageId":"73","endLine":17,"endColumn":27},{"ruleId":"74","severity":1,"message":"75","line":46,"column":45,"nodeType":"76","endLine":46,"endColumn":123},{"ruleId":"77","severity":1,"message":"78","line":48,"column":72,"nodeType":"79","messageId":"80","endLine":48,"endColumn":74},{"ruleId":"81","severity":1,"message":"82","line":36,"column":7,"nodeType":"83","endLine":36,"endColumn":9,"suggestions":"84"},{"ruleId":"70","severity":1,"message":"71","line":41,"column":19,"nodeType":"72","messageId":"73","endLine":41,"endColumn":27},{"ruleId":"74","severity":1,"message":"75","line":71,"column":35,"nodeType":"76","endLine":71,"endColumn":113},{"ruleId":"70","severity":1,"message":"85","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":16},"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'Button' is defined but never used.",{"desc":"87","fix":"88"},"Update the dependencies array to be: [id]",{"range":"89","text":"90"},[1236,1238],"[id]"]